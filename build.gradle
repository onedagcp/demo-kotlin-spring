buildscript {
    ext {
        kotlinVersion = "1.2.71"
        springBootVersion = "1.5.17.RELEASE"
    }
    repositories {
        mavenCentral()
        maven {
            setUrl("http://repo.spring.io/plugins-release")
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "kotlin-jpa"
apply plugin: "org.springframework.boot"
apply plugin: 'kotlin-kapt'

group = "com.example"
version = "0.0.6-SNAPSHOT"
sourceCompatibility = 1.8
targetCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileJava {
    options.compilerArgs << "-Xlint:all"
}
compileTestJava {
    options.compilerArgs << "-Xlint:all"
}

repositories {
    mavenCentral()
}

dependencies {
    // for web
    compile("org.springframework.boot:spring-boot-starter-web")
    // Jackson
    compile("com.fasterxml.jackson.core:jackson-databind")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin")
    // for db
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.hibernate:hibernate-java8")
    runtime("mysql:mysql-connector-java")
    // kotlin
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    // for dev
    kapt("org.springframework.boot:spring-boot-configuration-processor")
    compileOnly("org.springframework.boot:spring-boot-configuration-processor")
    runtime("org.springframework.boot:spring-boot-devtools")
    // for test
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("com.h2database:h2")
}

jar {
    archiveName = 'demo.jar'
}

springBoot {
    buildInfo()
}

bootRun {
    jvmArgs += ["-Dspring.profiles.active=dev"]
    // args += ["-F", "-X"]
}